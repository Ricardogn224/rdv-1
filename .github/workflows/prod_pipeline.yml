name: PROD CD

on:
  push:
    branches:
      - production

  pull_request:
    branches:
      - production

jobs:
  install:
    name: Install and  run front 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd client
          npm i 
          nohup npm run dev &

  run_back_end:
      name: run_back_end en deploy on ssh server 
      runs-on: ubuntu-latest
      env:
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_IP: ${{ secrets.SSH_IP }}

      steps: 
        - uses: actions/checkout@v2

        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y

      - name: Load .env.local file
        run: |
            cd server
            echo "Loading environment variables from .env.local"
            set -a
            [ -f ".env.local" ] && . ".env.local"
            set +a
      
      - name: Rename .env.test to .env.local
        run: mv server/.env.test server/.env.local

      
      - name: Check server directory contents
        run: |
          ls -l server
          cat server/docker-compose.yml



      - name: Install dependencies
        run: |
          cd server
          docker compose up -d


      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy code to server
        run: |
          pwd
          sshpass -p ${{ secrets.SSH_PASSWORD }} scp -o StrictHostKeyChecking=no -r /home/runner/work/rdv-1/rdv-1 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }}:server

  run_code_on_server:
      name: run_code_on_server en deploy on ssh server 
      runs-on: ubuntu-latest
      needs: run_back_end
      env:
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_IP: ${{ secrets.SSH_IP }}

      steps:
        - uses: actions/checkout@v2
      
        - name: Deploy code to server
          run: |
            sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }} "cd ~/server/rdv-1/server && docker-compose up -d"

                
        - name: Deploy front code
          run: |
            sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_IP }} "cd ~/server/rdv-1/client && docker-compose up -d"
            

        
          

            